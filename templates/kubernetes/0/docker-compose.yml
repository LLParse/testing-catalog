etcd:
  image: rancher/etcd:v2.3.6-2
  labels:
    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    io.rancher.container.start_once: 'true'
    io.rancher.sidekicks: data,kubernetes,scheduler,controller-manager
  environment:
    ETCD_DATA_DIR: /data
    ETCDCTL_ENDPOINT: http://etcd:2379
    RANCHER_DEBUG: ${DEBUG}
  links:
    - data
  volumes_from:
    - data

data:
  image: busybox
  entrypoint: /bin/true
  net: none
  volumes:
    - /data
  labels:
    io.rancher.container.start_once: 'true'

kubernetes:
    labels:
        io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
        io.rancher.container.create_agent: "true"
        io.rancher.container.agent.role: environmentAdmin
    command: 
        - kube-apiserver
        - --service-cluster-ip-range=10.43.0.0/16
        - --etcd-servers=http://127.0.0.1:2379
        - --insecure-bind-address=0.0.0.0
        - --insecure-port=80
        - --secure-port=6443
        - --cloud-provider=rancher
        - --allow_privileged=true
        - --admission-control=NamespaceLifecycle,LimitRanger,SecurityContextDeny,ResourceQuota,ServiceAccount
        - --client-ca-file=/etc/kubernetes/ssl/ca.pem
        - --tls-cert-file=/etc/kubernetes/ssl/cert.pem
        - --tls-private-key-file=/etc/kubernetes/ssl/key.pem
    image: llparse/k8s:dev
    links:
        - etcd
    net: container:etcd

scheduler:
    command:
        - kube-scheduler
        - --master=127.0.0.1:80
        - --address=0.0.0.0
        - --port=10251
        - --leader-elect=true
    image: llparse/k8s:dev
    links:
    - kubernetes
    net: container:etcd

controller-manager:
    command:
        - kube-controller-manager
        - --master=127.0.0.1:80
        - --cloud-provider=rancher
        - --address=0.0.0.0
        - --port=10252
        - --kubeconfig=/etc/kubernetes/ssl/kubeconfig
        - --root-ca-file=/etc/kubernetes/ssl/ca.pem
        - --service-account-private-key-file=/etc/kubernetes/ssl/key.pem
        - --leader-elect=true
    image: llparse/k8s:dev
    labels:
        io.rancher.container.create_agent: "true"
        io.rancher.container.agent.role: environmentAdmin
    links:
    - kubernetes
    net: container:etcd

kubernetes-lb:
    image: rancher/load-balancer-service
    labels:
        io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    expose:
    - 6443/tcp
    - 80/tcp
    links:
    - etcd

kubelet:
    labels:
        io.rancher.container.dns: "true"
        io.rancher.container.create_agent: "true"
        io.rancher.container.agent.role: environmentAdmin
        io.rancher.scheduler.global: "true"
        io.rancher.container.start_once: 'true'
    command:
        - kubelet
        - --kubeconfig=/etc/kubernetes/ssl/kubeconfig
        - --api_servers=http://kubernetes-lb
        - --allow-privileged=true
        - --register-node=true
        - --cloud-provider=rancher
        - --healthz-bind-address=0.0.0.0
        - --cluster-dns=169.254.169.250
        - --cluster-domain=cluster.local
    image: llparse/k8s:dev
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/run:/host/var/run
        - /var/lib/docker:/var/lib/docker
        - /dev:/host/dev
    net: host
    pid: host
    ipc: host
    privileged: true
    links:
    - kubernetes-lb

proxy:
    labels:
        io.rancher.container.dns: "true"
        io.rancher.scheduler.global: "true"
        io.rancher.container.start_once: 'true'
    command:
        - kube-proxy
        - --master=http://kubernetes-lb
        - --v=2
        - --healthz-bind-address=0.0.0.0
        - --proxy-mode=userspace
    image: llparse/k8s:dev
    privileged: true
    net: host
    links:
    - kubernetes-lb

kubectld:
    labels:
        io.rancher.k8s.kubectld: "true"
        io.rancher.container.start_once: 'true'
    environment:
        SERVER: http://kubernetes-lb
        LISTEN: ":8091"
    image: rancher/kubectld:v0.2.0
    links:
        - kubernetes-lb

rancher-kubernetes-agent:
    labels:
        io.rancher.container.create_agent: "true"
        io.rancher.container.agent_service.labels_provider: "true"
    environment:
        KUBERNETES_URL: http://kubernetes-lb
    image: rancher/kubernetes-agent:v0.2.0
    privileged: true
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    links:
        - kubernetes-lb

rancher-ingress-controller:
    image: rancher/ingress-controller:v0.1.3
    labels:
        io.rancher.container.create_agent: "true"
        io.rancher.container.agent.role: environment
        io.rancher.container.start_once: 'true'
    environment:
        KUBERNETES_URL: http://kubernetes-lb
    command:
        - ingress-controller
        - --lb-controller=kubernetes
        - --lb-provider=rancher
    links:
        - kubernetes-lb
